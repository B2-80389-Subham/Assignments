select * from customers;
+------+----------+----------+--------+------+
| cnum | cname    | city     | rating | snum |
+------+----------+----------+--------+------+
| 2001 | Hoffman  | London   |    100 | 1001 |
| 2002 | Giovanni | Rome     |    200 | 1003 |
| 2003 | Liu      | San Jose |    200 | 1002 |
| 2004 | Grass    | Berlin   |    300 | 1002 |
| 2006 | Clemens  | London   |    100 | 1001 |
| 2008 | Cisneros | San Jose |    300 | 1007 |
| 2007 | Pereira  | Rome     |    100 | 1004 |
+------+----------+----------+--------+------+

select * from orders;
+------+---------+------------+------+------+
| onum | amt     | odate      | cnum | snum |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3002 | 1900.10 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
| 3008 | 4723.00 | 1990-10-04 | 2006 | 1001 |
| 3010 |  309.95 | 1990-10-04 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-10-04 | 2006 | 1001 |
+------+---------+------------+------+------+

select * from salespeople;
+------+---------+-----------+------+
| snum | sname   | city      | comm |
+------+---------+-----------+------+
| 1001 | Peel    | London    | 0.12 |
| 1002 | Serres  | San Jose  | 0.13 |
| 1004 | Motika  | London    | 0.11 |
| 1007 | Rifkin  | Barcelona | 0.15 |
| 1003 | Axelrod | New York  | 0.10 |
+------+---------+-----------+------+


1.  Write a query that counts the number of salespeople registering orders for eachday.
(If a salesperson has more than one order on a given day, he or she should be
counted only once.).

select count(distinct(snum)) as Count
from orders 
group by odate;

+-------+
| Count |
+-------+
|     4 |
|     3 |
+-------+

2.  Write a query on the Customers table that will find the highest rating in each city.

the output in this form:
For the city (city), the highest rating is : (rating). 



select concat("For the city ",city, ", the highest rating is :",max(rating) ) as customers_table
    -> from customers
    -> group by city ;
+---------------------------------------------------+
| customers_table                                   |
+---------------------------------------------------+
| For the city London, the highest rating is :100   |
| For the city Rome, the highest rating is :200     |
| For the city San Jose, the highest rating is :300 |
| For the city Berlin, the highest rating is :300   |
+---------------------------------------------------+

3.  Write a query that totals the orders for each day and places the results in descending
order.

select count(amt) as total_orders, odate
    -> from orders
    -> group by odate
    -> order by count(amt) desc;
+--------------+------------+
| total_orders | odate      |
+--------------+------------+
|            5 | 1990-10-03 |
|            5 | 1990-10-04 |
+--------------+------------+

4.  Write a query that selects the total amount in orders for each salesperson for whom
this total is greater than the average amount of the order in the table.
(Note Use the average amount value directly â†’2565.84)

select sum(amt) as total
    -> from orders
    -> group by snum
    -> having total > 2565.84 ;
+----------+
| total    |
+----------+
| 15382.07 |
|  5546.15 |
+----------+

5. Write a query that selects the highest rating in each city.

select city ,max(rating) as highest
    -> from customers
    -> group by city;
+----------+---------+
| city     | highest |
+----------+---------+
| London   |     100 |
| Rome     |     200 |
| San Jose |     300 |
| Berlin   |     300 |
+----------+---------+

6. Largest order taken by each salesperson with order value more than Rs.3000.

 select max(amt) as max_amt , snum
    -> from orders
    -> group by snum
    -> having max_amt > 3000
    -> order by max_amt desc;
+---------+------+
| max_amt | snum |
+---------+------+
| 9891.88 | 1001 |
| 5160.45 | 1002 |
+---------+------+

7. Select each customer smallest order.


select min(amt) as min_amt , cnum
    -> from orders
    -> group by cnum;
+---------+------+
| min_amt | cnum |
+---------+------+
|   18.69 | 2008 |
|  767.19 | 2001 |
| 1900.10 | 2007 |
| 5160.45 | 2003 |
| 1713.23 | 2002 |
|   75.75 | 2004 |
| 4723.00 | 2006 |
+---------+------+



***************************************************************************************
hr database:

1. Display manager ID and number of employees managed by the manager.
select MANAGER_ID,  count(EMPLOYEE_ID) as emp_count
    -> from employees
    -> group by MANAGER_ID;
+------------+-----------+
| MANAGER_ID | emp_count |
+------------+-----------+
|          0 |         1 |
|        100 |        14 |
|        101 |         5 |
|        102 |         1 |
|        103 |         4 |
|        108 |         5 |
|        114 |         5 |
|        120 |         8 |
|        121 |         8 |
|        122 |         8 |
|        123 |         8 |
|        124 |         8 |
|        145 |         6 |
|        146 |         6 |
|        147 |         6 |
|        148 |         6 |
|        149 |         6 |
|        201 |         1 |
|        205 |         1 |
+------------+-----------+

2.  Display the country ID and number of cities we have in the country.


 select COUNTRY_ID,  count(COUNTRY_ID) as city_count
    -> from locations
    -> group by COUNTRY_ID;
+------------+------------+
| COUNTRY_ID | city_count |
+------------+------------+
| "          |          1 |
| AU         |          1 |
| BR         |          1 |
| CA         |          2 |
| CH         |          2 |
| CN         |          1 |
| DE         |          1 |
| IN         |          1 |
| IT         |          2 |
| JP         |          2 |
| NL         |          1 |
| Ox         |          1 |
| SG         |          1 |
| UK         |          2 |
| US         |          4 |
+------------+------------+
15 rows in set (0.00 sec)

3.  Display average salary of employees in each department who have commission
percentage.


select DEPARTMENT_ID , avg(salary) as average_sal
    -> from employees
    -> where COMMISSION_PCT > 0 and COMMISSION_PCT is not null
    -> group by DEPARTMENT_ID;
+---------------+-------------+
| DEPARTMENT_ID | average_sal |
+---------------+-------------+
|             0 | 7000.000000 |
|            80 | 8955.882353 |
+---------------+-------------+
2 rows in set (0.00 sec)

4. Display job ID, number of employees, sum of salary, and difference between highest
salary and lowest salary of the employees of the job.

select JOB_ID , count(EMPLOYEE_ID) as "Total employee" ,sum(salary) as "Total salary"
    -> ,max(salary)-min(salary) as diff_sal
    -> from employees
    -> group by JOB_ID;
+------------+----------------+--------------+----------+
| JOB_ID     | Total employee | Total salary | diff_sal |
+------------+----------------+--------------+----------+
| AC_ACCOUNT |              1 |      8300.00 |     0.00 |
| AC_MGR     |              1 |     12000.00 |     0.00 |
| AD_ASST    |              1 |      4400.00 |     0.00 |
| AD_PRES    |              1 |     24000.00 |     0.00 |
| AD_VP      |              2 |     34000.00 |     0.00 |
| FI_ACCOUNT |              5 |     39600.00 |  2100.00 |
| FI_MGR     |              1 |     12000.00 |     0.00 |
| HR_REP     |              1 |      6500.00 |     0.00 |
| IT_PROG    |              5 |     28800.00 |  4800.00 |
| MK_MAN     |              1 |     13000.00 |     0.00 |
| MK_REP     |              1 |      6000.00 |     0.00 |
| PR_REP     |              1 |     10000.00 |     0.00 |
| PU_CLERK   |              5 |     13900.00 |   600.00 |
| PU_MAN     |              1 |     11000.00 |     0.00 |
| SA_MAN     |              5 |     61000.00 |  3500.00 |
| SA_REP     |             30 |    250500.00 |  5400.00 |
| SH_CLERK   |             20 |     64300.00 |  1700.00 |
| ST_CLERK   |             20 |     55700.00 |  1500.00 |
| ST_MAN     |              5 |     36400.00 |  2400.00 |
+------------+----------------+--------------+----------+
19 rows in set (0.00 sec)


5. Display years in which more than 10 employees joined.


select JOB_ID ,avg(salary) as average_sal
    -> from employees
    -> group by JOB_ID
    -> having average_sal > 10000;
+---------+--------------+
| JOB_ID  | average_sal  |
+---------+--------------+
| AC_MGR  | 12000.000000 |
| AD_PRES | 24000.000000 |
| AD_VP   | 17000.000000 |
| FI_MGR  | 12000.000000 |
| MK_MAN  | 13000.000000 |
| PU_MAN  | 11000.000000 |
| SA_MAN  | 12200.000000 |
+---------+--------------+
7 rows in set (0.00 sec)



6.  Display years in which more than 10 employees joined.


select year(HIRE_DATE) as years,count(year(HIRE_DATE)) as total
    -> from employees
    -> group by years
    -> having total > 10;
+-------+-------+
| years | total |
+-------+-------+
|  1987 |   107 |
+-------+-------+
1 row in set (0.00 sec)


7. Display departments in which more than five employees have commission
percentage.

select DEPARTMENT_ID
    -> from employees
    -> where COMMISSION_PCT > 0
    -> group by DEPARTMENT_ID
    -> having count(EMPLOYEE_ID) > 5;
+---------------+
| DEPARTMENT_ID |
+---------------+
|            80 |
+---------------+
1 row in set (0.00 sec)



8. Display employee ID for employees who did more than one job in the past.

select EMPLOYEE_ID,count(EMPLOYEE_ID) As total
    -> from job_history
    -> group by EMPLOYEE_ID
    -> having total > 1;
+-------------+-------+
| EMPLOYEE_ID | total |
+-------------+-------+
|         101 |     2 |
|         176 |     2 |
|         200 |     2 |
+-------------+-------+
3 rows in set (0.00 sec)

9. Display job ID of jobs that were done by more than 3 employees for more than 100
days.

select JOB_ID , count(employee_id ) as cnt
    -> from job_history
    -> where datediff(end_date,start_date) > 100
    -> group by job_id
    -> having cnt > 3 ;
Empty set (0.00 sec)

10. Display department ID, year, and Number of employees joined.


select DEPARTMENT_ID, year(HIRE_DATE) as years , count(EMPLOYEE_ID) as cnt
    -> from employees
    -> group by DEPARTMENT_ID ,years;
+---------------+-------+-----+
| DEPARTMENT_ID | years | cnt |
+---------------+-------+-----+
|            90 |  1987 |   3 |
|            60 |  1987 |   5 |
|           100 |  1987 |   6 |
|            30 |  1987 |   6 |
|            50 |  1987 |  45 |
|            80 |  1987 |  34 |
|             0 |  1987 |   1 |
|            10 |  1987 |   1 |
|            20 |  1987 |   2 |
|            40 |  1987 |   1 |
|            70 |  1987 |   1 |
|           110 |  1987 |   2 |
+---------------+-------+-----+
12 rows in set (0.00 sec)

11. Display how many employees joined in each month of the current year.

select month(HIRE_DATE) as months ,count(EMPLOYEE_ID)
    -> from employees
    -> group by months;
+--------+--------------------+
| months | count(EMPLOYEE_ID) |
+--------+--------------------+
|      6 |                 14 |
|      7 |                 31 |
|      8 |                 31 |
|      9 |                 30 |
|     10 |                  1 |
+--------+--------------------+


12.  Display details of departments in which the maximum salary is more than 10000.


select DEPARTMENT_ID, max(salary) as salaries from employees
    -> group by DEPARTMENT_ID
    -> having salaries > 10000
    -> ;
+---------------+----------+
| DEPARTMENT_ID | salaries |
+---------------+----------+
|            20 | 13000.00 |
|            30 | 11000.00 |
|            80 | 14000.00 |
|            90 | 24000.00 |
|           100 | 12000.00 |
|           110 | 12000.00 |
+---------------+----------+

***************************************************************************************